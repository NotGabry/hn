---
import xss from "xss";
import getRelativeTime from "@modules/getRelativeTime";

export interface Props {
  data: any;
}
const { data } = Astro.props;

function extractDomainFromLink(link: string) {
  try {
    const url = new URL(link);
    const hostnameParts = url.hostname.split(".");
    if (hostnameParts.length >= 3) {
      hostnameParts.shift();
    }
    return hostnameParts.join(".");
  } catch (error) {
    return undefined;
  }
}
---

<main class="rounded-md border border-neutral-500/40 bg-black">
  <div class="flex w-full flex-col gap-2 break-words p-3">
    <!-- Author, time and title -->
    <div class="flex flex-col gap-1">
      <div class="text-sm">
        {"Posted by "}
        <a href={`/@${data.by}`}>
          {data.by}
        </a>
        {` ${getRelativeTime(data.time)}`}
      </div>
      <a href={data.url ? data.url : `/item/${data.id}`} class="font-bold">
        {data.title}
      </a>
      <!-- External URL -->
      {
        data.url && (
          <span class="flex items-center gap-1 break-all text-sm">
            {extractDomainFromLink(data.url)}
            <img src="/icons/link.svg" alt="External link" />
          </span>
        )
      }
    </div>
    <hr class="border-neutral-500/40" />
    <!-- Upvotes and comments -->
    <div class="flex flex-wrap items-center gap-3 text-sm">
      <div class="flex gap-1">
        <img src="/icons/upvote.svg" alt="upvote" />
        <span>{data.score}</span>
      </div>
      <div class="flex gap-1">
        <img src="/icons/comment.svg" alt="comment" />
        <a class="cursor-pointer text-blue-500 hover:underline" href={`/item/${data.id}`}>
          {`${data.descendants | 0} ${data.descendants == 1 ? "comment" : "comments"}`}
        </a>
      </div>
    </div>
  </div>
</main>
