---
import Item from "./Item.astro";
import xss from "xss";
import getRelativeTime from "@modules/getRelativeTime";
export interface Props {
  data: any;
}
const { data } = Astro.props;
---

<div class="py-3">
  <div
    class="m-auto flex w-full max-w-screen-md flex-col justify-between"
  >
    <div class="flex w-full flex-col break-words ">
      <!-- Author, time and title -->
      <div class="flex flex-col">
        <div class="text-sm">
          <span>Posted by</span>
          <a href={`/@${data.by}`} class="text-blue-500 hover:underline">
            {data.by}
          </a>
          <span>{getRelativeTime(data.time)}</span>
        </div>
        <a href={data.url ? data.url : `/item/${data.id}`} class="font-bold text-white">
          {data.title}
        </a>
      </div>
      <!-- Post description -->
      {
        data.text && (
          <div class="overflow-y-hidden break-words">
            <p class="p-0" set:html={xss(data.text)} />
          </div>
        )
      }
    </div>
    <!-- Upvotes and comments -->
    <div class="flex flex-wrap items-center gap-3 text-sm py-3">
      <div class="flex gap-1">
        <img src="/icons/upvote.svg" alt="upvote" />
        <span>{data.score}</span>
      </div>
      <div class="flex gap-1">
        <img src="/icons/comment.svg" alt="comment" />
        <span>
          {`${data.descendants | 0} ${data.descendants == 1 ? "comment" : "comments"}`}
        </span>
      </div>
    </div>
    <!-- Nested comments (recursive) -->
    <div>
      {data.kids && data.kids.map((kid: any) => <Item data={kid} />)}
    </div>
  </div>
</div>
